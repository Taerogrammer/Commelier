//
//  ChartView.swift
//  CryptoCollection
//
//  Created by 김태형 on 3/9/25.
//

import SwiftUI
import Charts

struct ChartView: View {
//    let priceData: [Double]
    let priceData: [Double] = [
        84600.52864758584, 84785.19164229938, 84452.16671372668, 84684.87464077682, 84659.92894806841, 85280.03180448567, 85167.93027730213, 85261.85384218712, 85357.75007854645, 85499.63370083639, 86040.13401090879, 86064.6646695572, 85982.6656372778, 85984.92968484931, 86325.16846001119, 85726.58136584464, 85824.99311969621, 85655.19135378071, 85930.4029532836, 86246.64068135856, 86207.33731471795, 85733.27090027815, 85861.56494055038, 85974.46210057012, 85952.41873108123, 85945.65637691983, 85673.0709138241, 85075.19099390629, 87445.5430848164, 91378.26201151186, 94183.67640464348, 92908.06234717843, 93553.2099599375, 94442.43103320176, 93993.49502205626, 94770.10370201574, 94261.53286538439, 93235.73548423624, 92994.25280972291, 93323.7976962091, 92682.02628626079, 93025.760601398, 93302.25115067598, 91464.20916332758, 92319.03215389892, 91365.5560267108, 91840.96195107298, 92520.05256903946, 92704.99332627936, 93184.11440212942, 93288.33219257377, 89948.47284407713, 90078.29699874723, 90100.55793547307, 90362.03357256715, 87491.4206062274, 85545.7625233458, 86058.30490682101, 85204.63043242115, 86170.71147754729, 86009.33348231346, 86121.81430043305, 83547.88761068918, 83972.72380658488, 83894.60765773285, 83415.32852921398, 84208.53292141939, 83856.74936488515, 83176.65536982972, 83842.65217935151, 83797.859996219, 83870.76608750969, 83840.8128569342, 83704.19016400714, 82681.05172860001, 83066.2270465692, 82922.8590885219, 83663.71104143023, 85454.70850609809, 86734.75594854711, 87903.09912509412, 86892.91764570212, 87654.10477359233, 87536.70299445765, 87310.80531078295, 86671.69226701841, 87636.02617297841, 87336.45385836615, 86728.88847600293, 86938.4775519185, 87196.79381349821, 87572.61283398556, 87642.61154756158, 87717.3980065317, 88641.41361763507, 89850.54371051837, 89753.15776222358, 90352.05950695107, 89433.26802498609, 89053.99855085106, 88337.21345459952, 89190.8514508287, 89693.88203144133, 89762.80824021908, 89840.50983422284, 90363.81178680262, 90315.43269286388, 90503.36669781877, 90746.37808455544, 90173.67851810707, 91565.19124357773, 91833.40344858613, 91778.32417365785, 92300.44149363266, 91906.28728287248, 91331.32236389222, 91202.75078154197, 90733.51714965983, 91044.06230513072, 91336.03520982015, 90211.93247418404, 89582.37084959116, 89907.2491350427, 90975.81551374556, 88376.11449099529, 88647.72782696952, 88396.31309600835, 89057.38701611568, 89144.13673375164, 89469.52920050574, 90450.752622387, 89924.21242214506, 85590.46644276992, 88065.84191323837, 87271.80248912342, 87042.73344323806, 87679.70424451, 88258.51066032593, 88314.21615036289, 88320.92622329212, 88405.65836333216, 88924.81213521794, 89111.65620602341, 88902.02000740796, 89125.67845016974, 89244.5516035285, 90647.79774677548, 88400.14740092268, 87154.86514264582, 88141.8174666587, 88541.86793090396, 87732.0584170869, 87087.52556159606, 86074.17176417045, 86744.24445440294, 86719.52967663977, 86828.25763790608, 85996.318846237, 86033.33085080402, 85923.7255070287, 86429.28703776673, 86272.32934188849, 86446.61234844815, 86159.46358384956, 86086.71730752365, 85917.18104453273, 86117.70061095654]

    var filteredData: [Double] {
        stride(from: 0, to: priceData.count, by: 5).map { index in priceData[index] }
    }

    let linearGradient = LinearGradient(gradient: Gradient(colors: [Color.accentColor.opacity(0.4),
                                                                    Color.accentColor.opacity(0)]),
                                        startPoint: .top,
                                        endPoint: .bottom)

    var body: some View {
        Chart {
            ForEach(filteredData.indices, id: \.self) { index in
                LineMark(
                    x: .value("", index),
                    y: .value("Price", filteredData[index]))
                .foregroundStyle(.blue)
                .interpolationMethod(.catmullRom)
                AreaMark(
                    x: .value("", index),
                    y: .value("Price", filteredData[index]))
                .interpolationMethod(.cardinal)
                .foregroundStyle(linearGradient)
            }
        }
        .padding()
    }
}
